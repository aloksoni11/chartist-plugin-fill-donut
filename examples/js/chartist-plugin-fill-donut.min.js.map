{"version":3,"sources":["chartist-plugin-fill-donut.js"],"names":["root","factory","define","amd","exports","module","require","Chartist","this","document","defaultOptions","fillClass","label","html","class","items","plugins","fillDonut","options","extend","chart","Pie","$svg","$chart","container","style","position","drawDonut","data","type","index","querySelector","$clone","group","_node","cloneNode","split","forEach","className","setAttribute","getAttribute","call","querySelectorAll","el","node","parentNode","removeChild","removeAttribute","insertBefore","childNodes","on","itemIndex","fillDonutOptions","thisItem","$wrapper","createElement","classList","add","item","id","content","offsetY","offsetX","length","insertAdjacentHTML","appendChild","cWidth","Math","ceil","offsetWidth","cHeight","clientHeight","wWidth","wHeight","bottom","left","top","right","center"],"mappings":"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","file":"chartist-plugin-fill-donut.min.js","sourcesContent":[";(function(root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(['chartist'], factory);\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = factory(require('chartist'));\r\n  } else {\r\n    root['Chartist.plugins.fillDonut'] = factory(root.Chartist);\r\n  }\r\n}(this, function(Chartist) {\r\n\"use strict\";\n\n/**\r\n * Chartist.js plugin to pre fill donuts with animations\r\n * author: moxx\r\n * author-url: https://github.com/moxx/chartist-plugin-fill-donut\r\n *\r\n */\n(function (document, Chartist) {\n  'use strict';\n\n  var defaultOptions = {\n    fillClass: 'ct-fill-donut',\n    label: {\n      html: 'div',\n      class: 'ct-fill-donut-label'\n    },\n    items: [{}]\n  };\n  Chartist.plugins = Chartist.plugins || {};\n\n  Chartist.plugins.fillDonut = function (options) {\n    options = Chartist.extend({}, defaultOptions, options);\n    return function fillDonut(chart) {\n      if (chart instanceof Chartist.Pie) {\n        var $chart = chart.container;\n        $chart.style.position = 'relative';\n        var $svg;\n\n        var drawDonut = function drawDonut(data) {\n          if (data.type === 'slice') {\n            if (data.index === 0) {\n              $svg = $chart.querySelector('svg');\n            }\n\n            var $clone = data.group._node.cloneNode(true);\n\n            options.fillClass.split(\" \").forEach(function (className) {\n              $clone.setAttribute('class', $clone.getAttribute('class') + ' ' + className);\n            });\n            [].forEach.call($clone.querySelectorAll('path'), function (el) {\n              [].forEach.call(el.querySelectorAll('animate'), function (node) {\n                node.parentNode.removeChild(node);\n              });\n              el.removeAttribute('stroke-dashoffset');\n            });\n            $svg.insertBefore($clone, $svg.childNodes[0]);\n          }\n        };\n\n        chart.on('draw', function (data) {\n          drawDonut(data);\n        });\n        chart.on('created', function (data) {\n          var itemIndex = 0;\n\n          if (chart.options.fillDonutOptions) {\n            options = Chartist.extend({}, options, chart.options.fillDonutOptions);\n            drawDonut(data);\n          }\n\n          [].forEach.call(options.items, function (thisItem) {\n            var $wrapper = document.createElement(options.label.html);\n            options.label.class.split(\" \").forEach(function (className) {\n              if ($wrapper.classList) {\n                $wrapper.classList.add(className);\n              } else {\n                $wrapper.className += ' ' + className;\n              }\n            });\n            var item = Chartist.extend({}, {\n              class: '',\n              id: '',\n              content: 'fillText',\n              position: 'center',\n              //bottom, top, left, right\n              offsetY: 0,\n              //top, bottom in px\n              offsetX: 0 //left, right in px\n\n            }, thisItem);\n\n            if (item.id.length > 0) {\n              $wrapper.setAttribute('id', item.id);\n            }\n\n            if (item.class.length > 0) {\n              $wrapper.setAttribute('class', item.class);\n            }\n\n            [].forEach.call($chart.querySelectorAll('*[data-fill-index$=\"fdid-' + itemIndex + '\"]'), function (node) {\n              node.parentNode.removeChild(node);\n            });\n            $wrapper.setAttribute('data-fill-index', 'fdid-' + itemIndex);\n            itemIndex += 1;\n            $wrapper.insertAdjacentHTML('beforeend', item.content);\n            $wrapper.style.position = 'absolute';\n            $chart.appendChild($wrapper);\n            var cWidth = Math.ceil($chart.offsetWidth / 2);\n            var cHeight = Math.ceil($chart.clientHeight / 2);\n            var wWidth = Math.ceil($wrapper.offsetWidth / 2);\n            var wHeight = Math.ceil($wrapper.clientHeight / 2);\n            var style = {\n              bottom: {\n                bottom: 0 + item.offsetY + \"px\",\n                left: cWidth - wWidth + item.offsetX + \"px\"\n              },\n              top: {\n                top: 0 + item.offsetY + \"px\",\n                left: cWidth - wWidth + item.offsetX + \"px\"\n              },\n              left: {\n                top: cHeight - wHeight + item.offsetY + \"px\",\n                left: 0 + item.offsetX + \"px\"\n              },\n              right: {\n                top: cHeight - wHeight + item.offsetY + \"px\",\n                right: 0 + item.offsetX + \"px\"\n              },\n              center: {\n                top: cHeight - wHeight + item.offsetY + \"px\",\n                left: cWidth - wWidth + item.offsetX + \"px\"\n              }\n            };\n            Chartist.extend($wrapper.style, style[item.position]);\n          });\n        });\n      }\n    };\n  };\n})(document, Chartist); // jshint ignore:line\r\nreturn Chartist.plugins.fillDonut;\r\n}));\r\n"]}